{"ast":null,"code":"// import { useEffect, useRef, useState } from \"react\";\n\n// const sections = [\n//   { id: 1, text: \"Welcome to Section 1\", bg: \"bg-black\" },\n//   { id: 2, text: \"This is Section 2\", bg: \"bg-gray-900\" },\n//   { id: 3, text: \"Here comes Section 3\", bg: \"bg-zinc-900\" },\n//   { id: 4, text: \"Final Section 4\", bg: \"bg-neutral-900\" },\n// ];\n\n//   function Test() {\n//   const [visibleSection, setVisibleSection] = useState(0);\n//   const refs = useRef([]);\n\n//   useEffect(() => {\n//     const observer = new IntersectionObserver(\n//       (entries) => {\n//         entries.forEach((entry) => {\n//           if (entry.isIntersecting) {\n//             const index = Number(entry.target.dataset.index);\n//             setVisibleSection(index);\n//           }\n//         });\n//       },\n//       { threshold: 0.6 }\n//     );\n\n//     refs.current.forEach((ref) => {\n//       if (ref) observer.observe(ref);\n//     });\n\n//     return () => {\n//       refs.current.forEach((ref) => {\n//         if (ref) observer.unobserve(ref);\n//       });\n//     };\n//   }, []);\n\n//   return (\n//     <div className=\"scroll-smooth\">\n//       {sections.map((section, index) => (\n//         <div\n//           key={section.id}\n//           data-index={index}\n//           ref={(el) => (refs.current[index] = el)}\n//           className={`h-screen flex items-center justify-center text-white text-4xl font-bold transition-opacity duration-700 ease-in-out ${section.bg} ${\n//             visibleSection === index ? \"opacity-100\" : \"opacity-0\"\n//           }`}\n//         >\n//           {section.text}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default Test","map":{"version":3,"names":[],"sources":["/Users/Hemanth/monke matrix projects/sage-stack/src/Test.jsx"],"sourcesContent":["// import { useEffect, useRef, useState } from \"react\";\n\n// const sections = [\n//   { id: 1, text: \"Welcome to Section 1\", bg: \"bg-black\" },\n//   { id: 2, text: \"This is Section 2\", bg: \"bg-gray-900\" },\n//   { id: 3, text: \"Here comes Section 3\", bg: \"bg-zinc-900\" },\n//   { id: 4, text: \"Final Section 4\", bg: \"bg-neutral-900\" },\n// ];\n\n//   function Test() {\n//   const [visibleSection, setVisibleSection] = useState(0);\n//   const refs = useRef([]);\n\n//   useEffect(() => {\n//     const observer = new IntersectionObserver(\n//       (entries) => {\n//         entries.forEach((entry) => {\n//           if (entry.isIntersecting) {\n//             const index = Number(entry.target.dataset.index);\n//             setVisibleSection(index);\n//           }\n//         });\n//       },\n//       { threshold: 0.6 }\n//     );\n\n//     refs.current.forEach((ref) => {\n//       if (ref) observer.observe(ref);\n//     });\n\n//     return () => {\n//       refs.current.forEach((ref) => {\n//         if (ref) observer.unobserve(ref);\n//       });\n//     };\n//   }, []);\n\n//   return (\n//     <div className=\"scroll-smooth\">\n//       {sections.map((section, index) => (\n//         <div\n//           key={section.id}\n//           data-index={index}\n//           ref={(el) => (refs.current[index] = el)}\n//           className={`h-screen flex items-center justify-center text-white text-4xl font-bold transition-opacity duration-700 ease-in-out ${section.bg} ${\n//             visibleSection === index ? \"opacity-100\" : \"opacity-0\"\n//           }`}\n//         >\n//           {section.text}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n\n\n\n// export default Test"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}