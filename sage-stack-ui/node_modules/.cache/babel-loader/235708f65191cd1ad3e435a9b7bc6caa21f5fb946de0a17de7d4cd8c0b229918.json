{"ast":null,"code":"var _jsxFileName = \"/Users/Hemanth/monke matrix projects/sage-stack/src/Test.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sections = [{\n  id: 1,\n  text: \"Welcome to Section 1\",\n  bg: \"bg-black\"\n}, {\n  id: 2,\n  text: \"This is Section 2\",\n  bg: \"bg-gray-900\"\n}, {\n  id: 3,\n  text: \"Here comes Section 3\",\n  bg: \"bg-zinc-900\"\n}, {\n  id: 4,\n  text: \"Final Section 4\",\n  bg: \"bg-neutral-900\"\n}];\nfunction Test() {\n  _s();\n  const [visibleSection, setVisibleSection] = useState(0);\n  const refs = useRef([]);\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          const index = Number(entry.target.dataset.index);\n          setVisibleSection(index);\n        }\n      });\n    }, {\n      threshold: 0.6\n    });\n    refs.current.forEach(ref => {\n      if (ref) observer.observe(ref);\n    });\n    return () => {\n      refs.current.forEach(ref => {\n        if (ref) observer.unobserve(ref);\n      });\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scroll-smooth\",\n    children: sections.map((section, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-index\": index,\n      ref: el => refs.current[index] = el,\n      className: `h-screen flex items-center justify-center text-white text-4xl font-bold transition-opacity duration-700 ease-in-out ${section.bg} ${visibleSection === index ? \"opacity-100\" : \"opacity-0\"}`,\n      children: section.text\n    }, section.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Test, \"fBJt0o55tMwtX5KYAQLedz8dxZc=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["useEffect","useRef","useState","jsxDEV","_jsxDEV","sections","id","text","bg","Test","_s","visibleSection","setVisibleSection","refs","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","index","Number","target","dataset","threshold","current","ref","observe","unobserve","className","children","map","section","el","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Hemanth/monke matrix projects/sage-stack/src/Test.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\nconst sections = [\n  { id: 1, text: \"Welcome to Section 1\", bg: \"bg-black\" },\n  { id: 2, text: \"This is Section 2\", bg: \"bg-gray-900\" },\n  { id: 3, text: \"Here comes Section 3\", bg: \"bg-zinc-900\" },\n  { id: 4, text: \"Final Section 4\", bg: \"bg-neutral-900\" },\n];\n\n  function Test() {\n  const [visibleSection, setVisibleSection] = useState(0);\n  const refs = useRef([]);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            const index = Number(entry.target.dataset.index);\n            setVisibleSection(index);\n          }\n        });\n      },\n      { threshold: 0.6 }\n    );\n\n    refs.current.forEach((ref) => {\n      if (ref) observer.observe(ref);\n    });\n\n    return () => {\n      refs.current.forEach((ref) => {\n        if (ref) observer.unobserve(ref);\n      });\n    };\n  }, []);\n\n  return (\n    <div className=\"scroll-smooth\">\n      {sections.map((section, index) => (\n        <div\n          key={section.id}\n          data-index={index}\n          ref={(el) => (refs.current[index] = el)}\n          className={`h-screen flex items-center justify-center text-white text-4xl font-bold transition-opacity duration-700 ease-in-out ${section.bg} ${\n            visibleSection === index ? \"opacity-100\" : \"opacity-0\"\n          }`}\n        >\n          {section.text}\n        </div>\n      ))}\n    </div>\n  );\n}\n\n\n\n\nexport default Test"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,QAAQ,GAAG,CACf;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,sBAAsB;EAAEC,EAAE,EAAE;AAAW,CAAC,EACvD;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,mBAAmB;EAAEC,EAAE,EAAE;AAAc,CAAC,EACvD;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,sBAAsB;EAAEC,EAAE,EAAE;AAAc,CAAC,EAC1D;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,iBAAiB;EAAEC,EAAE,EAAE;AAAiB,CAAC,CACzD;AAEC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAMW,IAAI,GAAGZ,MAAM,CAAC,EAAE,CAAC;EAEvBD,SAAS,CAAC,MAAM;IACd,MAAMc,QAAQ,GAAG,IAAIC,oBAAoB,CACtCC,OAAO,IAAK;MACXA,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAK;QACzB,IAAIA,KAAK,CAACC,cAAc,EAAE;UACxB,MAAMC,KAAK,GAAGC,MAAM,CAACH,KAAK,CAACI,MAAM,CAACC,OAAO,CAACH,KAAK,CAAC;UAChDR,iBAAiB,CAACQ,KAAK,CAAC;QAC1B;MACF,CAAC,CAAC;IACJ,CAAC,EACD;MAAEI,SAAS,EAAE;IAAI,CACnB,CAAC;IAEDX,IAAI,CAACY,OAAO,CAACR,OAAO,CAAES,GAAG,IAAK;MAC5B,IAAIA,GAAG,EAAEZ,QAAQ,CAACa,OAAO,CAACD,GAAG,CAAC;IAChC,CAAC,CAAC;IAEF,OAAO,MAAM;MACXb,IAAI,CAACY,OAAO,CAACR,OAAO,CAAES,GAAG,IAAK;QAC5B,IAAIA,GAAG,EAAEZ,QAAQ,CAACc,SAAS,CAACF,GAAG,CAAC;MAClC,CAAC,CAAC;IACJ,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEtB,OAAA;IAAKyB,SAAS,EAAC,eAAe;IAAAC,QAAA,EAC3BzB,QAAQ,CAAC0B,GAAG,CAAC,CAACC,OAAO,EAAEZ,KAAK,kBAC3BhB,OAAA;MAEE,cAAYgB,KAAM;MAClBM,GAAG,EAAGO,EAAE,IAAMpB,IAAI,CAACY,OAAO,CAACL,KAAK,CAAC,GAAGa,EAAI;MACxCJ,SAAS,EAAE,uHAAuHG,OAAO,CAACxB,EAAE,IAC1IG,cAAc,KAAKS,KAAK,GAAG,aAAa,GAAG,WAAW,EACrD;MAAAU,QAAA,EAEFE,OAAO,CAACzB;IAAI,GAPRyB,OAAO,CAAC1B,EAAE;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQZ,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC3B,EAAA,CA5CUD,IAAI;AAAA6B,EAAA,GAAJ7B,IAAI;AAiDf,eAAeA,IAAI;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}