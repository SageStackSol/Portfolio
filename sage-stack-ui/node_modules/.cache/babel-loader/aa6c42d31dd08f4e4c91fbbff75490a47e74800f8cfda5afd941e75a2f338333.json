{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n\n// const items = [\n//   { icon: \"🚀\" },\n//   { icon: \"🪐\" },\n//   { icon: \"🌙\" },\n//   { icon: \"☄️\" },\n//   { icon: \"🛰️\" },\n//   { icon: \"🪐\" },\n//   { icon: \"🌙\" },\n//   { icon: \"☄️\" },\n//   { icon: \"🛰️\" },\n// ];\n\n// function OrbitCarousel() {\n//   const [activeIndex, setActiveIndex] = useState(0);\n//   const radius = 180;\n//   const visibleItems = 2.5;\n\n//   // Autoplay\n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       setActiveIndex((prev) => (prev + 1) % items.length);\n//     }, 1000); // every 2.5s\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   // Spread across semicircle\n//   const itemAngle = 180 / (visibleItems * 2);\n\n//   return (\n//     <div className=\"relative h-[400px] w-full  overflow-hidden flex flex-col items-center justify-center\">\n//       {/* Orbit Arc (lines between elements) */}\n//       <div className=\"absolute bottom-[90px] w-[400px] h-[200px] border-t border-gray-600 rounded-b-full opacity-30\" />\n\n//       {/* Items on Arc */}\n//       <div className=\"relative w-full h-[300px] flex items-center justify-center\">\n//         {items.map((item, index) => {\n//           const relativeIndex =\n//             (index - activeIndex + items.length) % items.length;\n\n//           // Position only 3 items max (center, left, right)\n//           if (relativeIndex > 2 && relativeIndex < items.length - 2)\n//             return null;\n\n//           const angle = (relativeIndex - 1) * itemAngle;\n//           const rad = (angle * Math.PI) / 180;\n//           const x = radius * Math.cos(rad);\n//           const y = radius * Math.sin(rad);\n\n//           const scale = relativeIndex === 1 ? 1 : 0.8;\n//           const zIndex = relativeIndex === 1 ? 10 : 5;\n//           const opacity = relativeIndex === 1 ? 1 : 0.5;\n\n//           return (\n//             <div\n//               key={index}\n//               className=\"absolute shadow-md flex flex-col items-center justify-center transition-all duration-500\"\n//               style={{\n//                 transform: `translate(${x}px, ${-y}px) scale(${scale})`,\n//                 opacity,\n//                 zIndex,\n//               }}\n//             >\n//               <div className=\"text-4xl\">{item.icon}</div>\n//               {/* <div className=\"mt-2 text-sm font-semibold\">{item.title}</div> */}\n//             </div>\n//           );\n//         })}\n//       </div>\n//     </div>\n//   );\n// }\n// export default OrbitCarousel;\n\n// import React, { useEffect, useState } from \"react\";\n// // import \"./PlanetCarousel.css\";\n\n// const PlanetCarousel = () => {\n//   const elements = [\"🪐\", \"🌎\", \"🌕\", \"🌟\", \"☄️\", \"🛰️\"];\n//   const [angle, setAngle] = useState(0);\n\n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       setAngle((prev) => prev + 1);\n//     }, 50);\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   const visibleCount = 3;\n//   const radius = 150;\n//   const arc = Math.PI; // 180 degrees\n\n//   return (\n//     <div className=\"orbit-wrapper\">\n//       <div\n//         className=\"orbit\"\n//         style={{ transform: `rotate(${angle}deg)` }}\n//       >\n//         {elements.map((el, i) => {\n//           const theta = (i / (elements.length - 1)) * arc;\n//           const x = radius * Math.cos(theta);\n//           const y = radius * Math.sin(theta);\n\n//           return (\n//             <div\n//               key={i}\n//               className=\"planet\"\n//               style={{\n//                 transform: `translate(${x}px, ${-y}px) rotate(${-angle}deg)`,\n//                 opacity: i < visibleCount ? 1 : 0.3,\n//               }}\n//             >\n//               {el}\n//             </div>\n//           );\n//         })}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default PlanetCarousel;","map":{"version":3,"names":[],"sources":["/Users/Hemanth/monke matrix projects/sage-stack/src/components/carousal/OrbitCarousal.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n\n// const items = [\n//   { icon: \"🚀\" },\n//   { icon: \"🪐\" },\n//   { icon: \"🌙\" },\n//   { icon: \"☄️\" },\n//   { icon: \"🛰️\" },\n//   { icon: \"🪐\" },\n//   { icon: \"🌙\" },\n//   { icon: \"☄️\" },\n//   { icon: \"🛰️\" },\n// ];\n\n// function OrbitCarousel() {\n//   const [activeIndex, setActiveIndex] = useState(0);\n//   const radius = 180;\n//   const visibleItems = 2.5;\n\n//   // Autoplay\n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       setActiveIndex((prev) => (prev + 1) % items.length);\n//     }, 1000); // every 2.5s\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   // Spread across semicircle\n//   const itemAngle = 180 / (visibleItems * 2);\n\n//   return (\n//     <div className=\"relative h-[400px] w-full  overflow-hidden flex flex-col items-center justify-center\">\n//       {/* Orbit Arc (lines between elements) */}\n//       <div className=\"absolute bottom-[90px] w-[400px] h-[200px] border-t border-gray-600 rounded-b-full opacity-30\" />\n\n//       {/* Items on Arc */}\n//       <div className=\"relative w-full h-[300px] flex items-center justify-center\">\n//         {items.map((item, index) => {\n//           const relativeIndex =\n//             (index - activeIndex + items.length) % items.length;\n\n//           // Position only 3 items max (center, left, right)\n//           if (relativeIndex > 2 && relativeIndex < items.length - 2)\n//             return null;\n\n//           const angle = (relativeIndex - 1) * itemAngle;\n//           const rad = (angle * Math.PI) / 180;\n//           const x = radius * Math.cos(rad);\n//           const y = radius * Math.sin(rad);\n\n//           const scale = relativeIndex === 1 ? 1 : 0.8;\n//           const zIndex = relativeIndex === 1 ? 10 : 5;\n//           const opacity = relativeIndex === 1 ? 1 : 0.5;\n\n//           return (\n//             <div\n//               key={index}\n//               className=\"absolute shadow-md flex flex-col items-center justify-center transition-all duration-500\"\n//               style={{\n//                 transform: `translate(${x}px, ${-y}px) scale(${scale})`,\n//                 opacity,\n//                 zIndex,\n//               }}\n//             >\n//               <div className=\"text-4xl\">{item.icon}</div>\n//               {/* <div className=\"mt-2 text-sm font-semibold\">{item.title}</div> */}\n//             </div>\n//           );\n//         })}\n//       </div>\n//     </div>\n//   );\n// }\n// export default OrbitCarousel;\n\n// import React, { useEffect, useState } from \"react\";\n// // import \"./PlanetCarousel.css\";\n\n// const PlanetCarousel = () => {\n//   const elements = [\"🪐\", \"🌎\", \"🌕\", \"🌟\", \"☄️\", \"🛰️\"];\n//   const [angle, setAngle] = useState(0);\n\n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       setAngle((prev) => prev + 1);\n//     }, 50);\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   const visibleCount = 3;\n//   const radius = 150;\n//   const arc = Math.PI; // 180 degrees\n\n//   return (\n//     <div className=\"orbit-wrapper\">\n//       <div\n//         className=\"orbit\"\n//         style={{ transform: `rotate(${angle}deg)` }}\n//       >\n//         {elements.map((el, i) => {\n//           const theta = (i / (elements.length - 1)) * arc;\n//           const x = radius * Math.cos(theta);\n//           const y = radius * Math.sin(theta);\n\n//           return (\n//             <div\n//               key={i}\n//               className=\"planet\"\n//               style={{\n//                 transform: `translate(${x}px, ${-y}px) rotate(${-angle}deg)`,\n//                 opacity: i < visibleCount ? 1 : 0.3,\n//               }}\n//             >\n//               {el}\n//             </div>\n//           );\n//         })}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default PlanetCarousel;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}